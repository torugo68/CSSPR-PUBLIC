generator client {
  provider = "prisma-client-js"
}

// mysql in production
datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id           Int       @id @default(autoincrement())
  email        String       @unique
  name         String
  department    Department?  @relation(fields: [departmentId], references: [id], onUpdate: Cascade)
  role         Role?        @relation(fields: [roleId], references: [id], onUpdate: Cascade)
  departmentId Int?
  roleId       Int?
  permissions  Permission[]
  sids         UserSids[]
  Admin        Admin[]
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  deletedAt    DateTime?
}

model Admin {
  id        Int       @id @default(autoincrement())
  username  String    @unique
  password  String
  user      User?     @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: SetNull)
  userId    Int?
  allow Boolean @default(false)
  deletedAt DateTime?
}

model Role {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  users      User[]
}

model Department {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  users      User[]
}

model System {
  id         Int          @id @default(autoincrement())
  name       String       @unique
  Permission Permission[]
}

model Permission {
  id       Int     @id @default(autoincrement())
  User     User?   @relation(fields: [userId], references: [id])
  System   System  @relation(fields: [systemId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  userId   Int
  systemId Int

  @@unique([userId, systemId])
}

model Sid {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  sids     UserSids[]  
}

model UserSids {
  id        Int       @id @default(autoincrement())
  sid       Sid      @relation(fields: [sidId], references: [id], onUpdate: Cascade)
  sidId     Int
  user      User     @relation(fields: [userId], references: [id], onUpdate: Cascade)
  userId    Int
  value     String

  @@unique([sidId, userId])
}

model OperationsTypes {
  id        Int       @id @default(autoincrement())
  name      String    @unique
}

model Logs {
  id        Int       @id @default(autoincrement())
  operation String
  name      String
  email     String
  role String
  admin     String
  createdAt DateTime   @default(now())
}